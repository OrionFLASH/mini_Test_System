# Правила для проекта System Performance Test

## Общие требования к коду:
- Используй Python 3.8+
- Всегда добавляй подробные комментарии на русском языке
- Используй типизацию (type hints) для всех функций
- Следуй PEP 8 для форматирования кода
- Используй docstrings для всех функций и классов

## Структура проекта:
- Основной файл: `main.py`
- Все функции и переменные в одном файле
- Константы и настройки в начале файла
- Глобальные переменные после констант

## Логирование:
- Используй модуль `logging` с уровнями INFO и DEBUG
- Логи должны быть на русском языке
- Файлы логов в каталоге `/Users/orionflash/Desktop/MyProject/Test_PC_FullLoad/WORK/LOGS`
- Формат имени: `LOG1_{INFO/DEBUG}_{YYYY-MM-DD}.log`

## Конфигурация:
- Все настройки через словари и списки
- Минимизируй хардкод
- Используй структурированную конфигурацию
- Значения по умолчанию в переменной `DEFAULT_VALUES`

## Текстовые выводы:
- Все текстовые сообщения с дополнительными значениями задавать в списках/словарях
- Использовать эти списки для логов и выводов на экран
- Минимизировать хардкод в текстовых строках
- Подстановка переменных через ключи или форматирование

## Мониторинг системы:
- Используй `psutil` для мониторинга CPU, RAM, температуры
- Многопоточность для мониторинга
- Обработка сигналов для корректного завершения

## Кроссплатформенность:
- Поддержка macOS (Apple Silicon, Intel)
- Поддержка Windows (x86)
- Автоматическое определение типа процессора

## Тестирование:
- Минимум 10 секунд, максимум 60 секунд
- Возможность прерывания (Ctrl+C)
- Сохранение результатов в файлы
- Детальная информация о расчетах

## Файловая система:
- Базовый путь: `/Users/orionflash/Desktop/MyProject/Test_PC_FullLoad/WORK`
- Подкаталоги: `LOGS` и `OUTPUT`
- Структурированное именование файлов

## Документация:
- Подробный README.md
- Описание всех функций и переменных
- Примеры использования
- История версий 